{"version":3,"sources":["../../src/providers/translation-history/translation-history.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/history/history.ts","../../src/pages/contact/contact.ts","../../src/pages/home/home.ts","../../src/providers/translation-data.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/model/translation.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { Translation } from '../../model/translation';\n\n/*\n  Generated class for the TranslationHistoryProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class TranslationHistoryProvider {\n\n  private historyArray: Translation[];\n\n  constructor(public http: Http) {\n    console.log('Hello TranslationHistoryProvider Provider');\n    this.historyArray = [];\n  }\n\n  pushToHistory (text, result) {\n    let transObj = new Translation(text, result);\n    this.historyArray.unshift(transObj);\n  }\n\n  getHistoryData():Array<Translation> {\n    return this.historyArray;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/translation-history/translation-history.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 110\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 152;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 0","import { Component } from '@angular/core';\n\nimport { HistoryPage } from '../history/history';\nimport { ContactPage } from '../contact/contact';\nimport { HomePage } from '../home/home';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = HomePage;\n  tab2Root = HistoryPage;\n  tab3Root = ContactPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { TranslationHistoryProvider } from '../../providers/translation-history/translation-history';\nimport { Translation } from '../../model/translation';\n\n@Component({\n  selector: 'page-history',\n  templateUrl: 'history.html'\n})\nexport class HistoryPage {\n\n  historyArray: Translation[];\n\n  constructor(public navCtrl: NavController, private translationHistory: TranslationHistoryProvider) {\n\n  }\n\n  ionViewWillEnter () {\n    this.historyArray = this.translationHistory.getHistoryData();\n  }\n\n  public deleteHistory(item:Translation) {\n    alert('Item to delete: '+item.translationResult);\n\n    // TODO: delete item from history array\n  }\n\n  public hear(item:Translation){\n    // implement text to speech native API\n    // pass translationResult to text to speech API\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/history/history.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-contact',\n  templateUrl: 'contact.html'\n})\nexport class ContactPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","import { Component, Output } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { TranslationData } from '../../providers/translation-data';\n\nimport { SpeechRecognition } from '@ionic-native/speech-recognition';\n\nimport { TranslationHistoryProvider } from '../../providers/translation-history/translation-history';\n\n// Zone for updating UI\nimport { NgZone } from '@angular/core';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  private speechToTextEnabled = false;\n\n  private textForTranslation:string = '';\n  private cardContent:string = '';\n\n  constructor(public navCtrl: NavController, private translation: TranslationData, private speechRecognition: SpeechRecognition, private translationHistory: TranslationHistoryProvider, private zone:NgZone) {\n\n    // test if speech to text is enabled\n    this.speechRecognition.isRecognitionAvailable()\n    .then((available: boolean) => this.speechToTextEnabled = available);\n  }\n\n  /**\n   * user input\n   * @param tText \n   */\n  public translateClick(tText:string){\n    this.textForTranslation = tText;\n\n    console.log(this.textForTranslation);\n\n    // pass text for translation to translation service\n    this.translation.getTranslation(this.textForTranslation).subscribe( (result) => {\n      // could be run outside of this NgZone, run it always inside, for refresh UI\n        this.cardContent = result.responseData.translatedText;\n\n        this.translationHistory.pushToHistory(this.textForTranslation, result.responseData.translatedText);\n    });\n  }\n\n  /**\n   *  Event handler for speech recognition\n   */\n  public speechToText() {\n    if(this.speechToTextEnabled){\n      // speech recognition is available\n      \n      // at first, check we have permissions\n      this.speechRecognition.hasPermission()\n      .then((hasPermission: boolean) => {\n\n        if(hasPermission){\n          // we have permissions, lets go\n          this.recogniseSpeech();\n        } else {\n          // request permissions\n          this.speechRecognition.requestPermission()\n          .then(\n            () => {\n              // permissions granted\n              this.recogniseSpeech();\n            },\n            () => {\n              // permissions denied\n\n          });\n        }\n\n      });\n    \n      \n    } else {\n      // speech recognition is disabled\n      console.log('Speech recognition not available.');\n    }\n  }\n\n  private recogniseSpeech(){\n\n    let options = {\n      language: \"cs-CZ\",\n      matches: 1\n    }\n\n    // start recognition\n    this.speechRecognition.startListening(options)\n    .subscribe(\n      (matches: Array<string>) => {\n        // we get array of recognized words, lets join them and trigger the translation\n       let text = matches.join(' ');\n       this.zone.run(() => {\n        this.translateClick(text);\n       });\n      },\n      (onerror) => console.log('error:', onerror)\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { Observable } from \"../../node_modules/rxjs/Observable\";\n\n/*\n  Generated class for the TranslationData provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class TranslationData {\n\n  constructor(public http: Http) {\n    console.log('Hello TranslationData Provider');\n  }\n\n  getTranslation(text):Observable<any> {\n    var url = 'http://api.mymemory.translated.net/get?q='+encodeURI(text)+'&langpair=cs|en';\n    var response = this.http.get(url).map(res => res.json());\n    return response;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/translation-data.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { HistoryPage } from '../pages/history/history';\nimport { ContactPage } from '../pages/contact/contact';\nimport { HomePage } from '../pages/home/home';\nimport { TabsPage } from '../pages/tabs/tabs';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n// providers\nimport { TranslationData } from '../providers/translation-data';\nimport { HttpModule } from '@angular/http';\n\n// speech recognition native plugin lib\nimport { SpeechRecognition } from '@ionic-native/speech-recognition';\nimport { TranslationHistoryProvider } from '../providers/translation-history/translation-history';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HistoryPage,\n    ContactPage,\n    HomePage,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HistoryPage,\n    ContactPage,\n    HomePage,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    TranslationData,\n    SpeechRecognition,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    TranslationHistoryProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export class Translation {\n    translationText: string;\n    translationResult: string;\n\n    constructor(text:string, result:string) {\n        this.translationText = text;\n        this.translationResult = result;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/translation.ts"],"sourceRoot":""}